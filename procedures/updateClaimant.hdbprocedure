PROCEDURE "_SYS_BIC"."s0009272344trial.thrinke.ofac.procedures::updateClaimant"(
		IN intab "_SYS_BIC"."s0009272344trial.thrinke.ofac.data::model.procedures.claimant",
		IN outtab "_SYS_BIC"."s0009272344trial.thrinke.ofac.data::model.procedures.claimant",
		OUT errtab "_SYS_BIC"."s0009272344trial.thrinke.ofac.data::model.procedures.errors"
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA _SYS_BIC
AS
BEGIN
	DECLARE lv_key STRING;
	DECLARE lv_LossNumber STRING;
	DECLARE lv_LossStatus STRING;
	DECLARE lv_ClaimantName STRING;
	DECLARE lv_CompanyCode STRING;
	DECLARE lv_BusinessArea STRING;
	DECLARE lv_ChangedBy STRING;
	DECLARE lv_ChangedOn TIMESTAMP;
	DECLARE lv_ExportedOn TIMESTAMP;
   
	SELECT ID,
	        LOSSNUMBER, 
			LOSSSTATUS, 
			CLAIMANTNAME, 
			COMPANYCODE, 
			BUSINESSAREA,
			CURRENT_DATE, 
			CHANGEDBY 
	
		INTO lv_key,
		    lv_LossNumber, 
			lv_LossStatus, 
			lv_ClaimantName, 
			lv_CompanyCode, 
			lv_BusinessArea,
			lv_ChangedOn,
			lv_ChangedBy
		FROM :intab;



	IF (:lv_ClaimantName = '') THEN
		errtab = SELECT 500 AS http_status_code, 
					'empty name ' || lv_ClaimantName AS error_message, 
					'No Way! Last name field must not be empty' AS detail
				FROM dummy;
	ELSE
		Update  "s0009272344trial.thrinke.ofac.data::model.claimant" 
		set 
		LOSSNUMBER = lv_LossNumber,
		LOSSSTATUS = lv_LossStatus,
		CLAIMANTNAME = lv_ClaimantName,
		COMPANYCODE = lv_CompanyCode,
		BUSINESSAREA = lv_BusinessArea,
		CHANGEDON = lv_ChangedOn,
		CHANGEDBY = 'trinke'
		where ID = lv_key;
	END IF;
END;
